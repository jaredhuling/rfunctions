
## This assume that we can call Rscript to ask Rcpp about its locations
## Use the R_HOME indirection to support installations of multiple R version

##export PKG_LIBS=`Rscript -e “Rcpp:::LdFlags()”`
##export PKG_CXXFLAGS=`Rscript -e “Rcpp:::CxxFlags()”`


##PKG_LIBS = $(BLAS_LIBS) $(FLIBS) \
##$(shell "Rscript.exe" -e "Rcpp:::LdFlags()")

##PKG_LIBS = $(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" -e "Rcpp:::LdFlags()")


############OLD 
##PKG_CPPFLAGS = -I${R_HOME}/library/RcppEigen/include \
##-I${R_HOME}/library/Rcpp/include -I. -DNDEBUG


PKG_CPPFLAGS = -I../inst/include

## With Rcpp 0.11.0 and later, we no longer need to set PKG_LIBS as there is
## no user-facing library. The include path to headers is already set by R.
#PKG_LIBS =
PKG_LIBS = $(BLAS_LIBS) $(FLIBS)

.PHONY: all clean

all: $(SHLIB)

clean:
	$(RM) *.o
	$(RM) *.dll
	$(RM) *.so
	$(RM) *.dylib

